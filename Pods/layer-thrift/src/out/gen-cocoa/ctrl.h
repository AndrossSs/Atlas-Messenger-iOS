/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


enum LYRTPushType {
  PushType_APNS = 1,
  PushType_GCM = 2
};

typedef NSData * LYRTUUID;

typedef NSMutableArray * LYRTAccounts;

typedef NSMutableArray * LYRTApps;

typedef NSMutableArray * LYRTAccountsWithApps;

@interface LYRTBadRequestException : NSException <TBase, NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface LYRTConflictException : NSException <TBase, NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface LYRTUnauthorizedException : NSException <TBase, NSCoding> {
  NSString * __message;
  NSString * __nonce;

  BOOL __message_isset;
  BOOL __nonce_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
@property (nonatomic, retain, getter=nonce, setter=setNonce:) NSString * nonce;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message nonce: (NSString *) nonce;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (NSString *) nonce;
- (void) setNonce: (NSString *) nonce;
#endif
- (BOOL) nonceIsSet;

@end

@interface LYRTNotFoundException : NSException <TBase, NSCoding> {
  NSString * __missingEntity;
  NSString * __message;

  BOOL __missingEntity_isset;
  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=missingEntity, setter=setMissingEntity:) NSString * missingEntity;
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithMissingEntity: (NSString *) missingEntity message: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) missingEntity;
- (void) setMissingEntity: (NSString *) missingEntity;
#endif
- (BOOL) missingEntityIsSet;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface LYRTInternalException : NSException <TBase, NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface LYRTAccount : NSObject <TBase, NSCoding> {
  LYRTUUID __id;
  LYRTUUID __provider_id;
  NSString * __email;
  NSString * __password;
  NSString * __first_name;
  NSString * __last_name;
  NSString * __company_name;
  NSString * __photo_url;
  int64_t __joined;
  int64_t __first_login;
  BOOL __admin;
  BOOL __deleted;
  NSString * __authy_id;
  NSString * __phone;
  NSString * __phone_cc;
  int32_t __permissions;

  BOOL __id_isset;
  BOOL __provider_id_isset;
  BOOL __email_isset;
  BOOL __password_isset;
  BOOL __first_name_isset;
  BOOL __last_name_isset;
  BOOL __company_name_isset;
  BOOL __photo_url_isset;
  BOOL __joined_isset;
  BOOL __first_login_isset;
  BOOL __admin_isset;
  BOOL __deleted_isset;
  BOOL __authy_id_isset;
  BOOL __phone_isset;
  BOOL __phone_cc_isset;
  BOOL __permissions_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) LYRTUUID id;
@property (nonatomic, retain, getter=provider_id, setter=setProvider_id:) LYRTUUID provider_id;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=password, setter=setPassword:) NSString * password;
@property (nonatomic, retain, getter=first_name, setter=setFirst_name:) NSString * first_name;
@property (nonatomic, retain, getter=last_name, setter=setLast_name:) NSString * last_name;
@property (nonatomic, retain, getter=company_name, setter=setCompany_name:) NSString * company_name;
@property (nonatomic, retain, getter=photo_url, setter=setPhoto_url:) NSString * photo_url;
@property (nonatomic, getter=joined, setter=setJoined:) int64_t joined;
@property (nonatomic, getter=first_login, setter=setFirst_login:) int64_t first_login;
@property (nonatomic, getter=admin, setter=setAdmin:) BOOL admin;
@property (nonatomic, getter=deleted, setter=setDeleted:) BOOL deleted;
@property (nonatomic, retain, getter=authy_id, setter=setAuthy_id:) NSString * authy_id;
@property (nonatomic, retain, getter=phone, setter=setPhone:) NSString * phone;
@property (nonatomic, retain, getter=phone_cc, setter=setPhone_cc:) NSString * phone_cc;
@property (nonatomic, getter=permissions, setter=setPermissions:) int32_t permissions;
#endif

- (id) init;
- (id) initWithId: (LYRTUUID) id provider_id: (LYRTUUID) provider_id email: (NSString *) email password: (NSString *) password first_name: (NSString *) first_name last_name: (NSString *) last_name company_name: (NSString *) company_name photo_url: (NSString *) photo_url joined: (int64_t) joined first_login: (int64_t) first_login admin: (BOOL) admin deleted: (BOOL) deleted authy_id: (NSString *) authy_id phone: (NSString *) phone phone_cc: (NSString *) phone_cc permissions: (int32_t) permissions;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTUUID) id;
- (void) setId: (LYRTUUID) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (LYRTUUID) provider_id;
- (void) setProvider_id: (LYRTUUID) provider_id;
#endif
- (BOOL) provider_idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) password;
- (void) setPassword: (NSString *) password;
#endif
- (BOOL) passwordIsSet;

#if !__has_feature(objc_arc)
- (NSString *) first_name;
- (void) setFirst_name: (NSString *) first_name;
#endif
- (BOOL) first_nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) last_name;
- (void) setLast_name: (NSString *) last_name;
#endif
- (BOOL) last_nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) company_name;
- (void) setCompany_name: (NSString *) company_name;
#endif
- (BOOL) company_nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) photo_url;
- (void) setPhoto_url: (NSString *) photo_url;
#endif
- (BOOL) photo_urlIsSet;

#if !__has_feature(objc_arc)
- (int64_t) joined;
- (void) setJoined: (int64_t) joined;
#endif
- (BOOL) joinedIsSet;

#if !__has_feature(objc_arc)
- (int64_t) first_login;
- (void) setFirst_login: (int64_t) first_login;
#endif
- (BOOL) first_loginIsSet;

#if !__has_feature(objc_arc)
- (BOOL) admin;
- (void) setAdmin: (BOOL) admin;
#endif
- (BOOL) adminIsSet;

#if !__has_feature(objc_arc)
- (BOOL) deleted;
- (void) setDeleted: (BOOL) deleted;
#endif
- (BOOL) deletedIsSet;

#if !__has_feature(objc_arc)
- (NSString *) authy_id;
- (void) setAuthy_id: (NSString *) authy_id;
#endif
- (BOOL) authy_idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) phone;
- (void) setPhone: (NSString *) phone;
#endif
- (BOOL) phoneIsSet;

#if !__has_feature(objc_arc)
- (NSString *) phone_cc;
- (void) setPhone_cc: (NSString *) phone_cc;
#endif
- (BOOL) phone_ccIsSet;

#if !__has_feature(objc_arc)
- (int32_t) permissions;
- (void) setPermissions: (int32_t) permissions;
#endif
- (BOOL) permissionsIsSet;

@end

@interface LYRTApnsCert : NSObject <TBase, NSCoding> {
  NSString * __cert;
  NSString * __password;
  BOOL __sandbox;

  BOOL __cert_isset;
  BOOL __password_isset;
  BOOL __sandbox_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=cert, setter=setCert:) NSString * cert;
@property (nonatomic, retain, getter=password, setter=setPassword:) NSString * password;
@property (nonatomic, getter=sandbox, setter=setSandbox:) BOOL sandbox;
#endif

- (id) init;
- (id) initWithCert: (NSString *) cert password: (NSString *) password sandbox: (BOOL) sandbox;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) cert;
- (void) setCert: (NSString *) cert;
#endif
- (BOOL) certIsSet;

#if !__has_feature(objc_arc)
- (NSString *) password;
- (void) setPassword: (NSString *) password;
#endif
- (BOOL) passwordIsSet;

#if !__has_feature(objc_arc)
- (BOOL) sandbox;
- (void) setSandbox: (BOOL) sandbox;
#endif
- (BOOL) sandboxIsSet;

@end

@interface LYRTApp : NSObject <TBase, NSCoding> {
  LYRTUUID __id;
  NSString * __name;
  NSString * __photo_url;
  BOOL __enabled;
  LYRTApnsCert * __apns_cert;
  BOOL __deleted;

  BOOL __id_isset;
  BOOL __name_isset;
  BOOL __photo_url_isset;
  BOOL __enabled_isset;
  BOOL __apns_cert_isset;
  BOOL __deleted_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) LYRTUUID id;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=photo_url, setter=setPhoto_url:) NSString * photo_url;
@property (nonatomic, getter=enabled, setter=setEnabled:) BOOL enabled;
@property (nonatomic, retain, getter=apns_cert, setter=setApns_cert:) LYRTApnsCert * apns_cert;
@property (nonatomic, getter=deleted, setter=setDeleted:) BOOL deleted;
#endif

- (id) init;
- (id) initWithId: (LYRTUUID) id name: (NSString *) name photo_url: (NSString *) photo_url enabled: (BOOL) enabled apns_cert: (LYRTApnsCert *) apns_cert deleted: (BOOL) deleted;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTUUID) id;
- (void) setId: (LYRTUUID) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) photo_url;
- (void) setPhoto_url: (NSString *) photo_url;
#endif
- (BOOL) photo_urlIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enabled;
- (void) setEnabled: (BOOL) enabled;
#endif
- (BOOL) enabledIsSet;

#if !__has_feature(objc_arc)
- (LYRTApnsCert *) apns_cert;
- (void) setApns_cert: (LYRTApnsCert *) apns_cert;
#endif
- (BOOL) apns_certIsSet;

#if !__has_feature(objc_arc)
- (BOOL) deleted;
- (void) setDeleted: (BOOL) deleted;
#endif
- (BOOL) deletedIsSet;

@end

@interface LYRTAccountApps : NSObject <TBase, NSCoding> {
  LYRTAccount * __account;
  LYRTApps __apps;

  BOOL __account_isset;
  BOOL __apps_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=account, setter=setAccount:) LYRTAccount * account;
@property (nonatomic, retain, getter=apps, setter=setApps:) LYRTApps apps;
#endif

- (id) init;
- (id) initWithAccount: (LYRTAccount *) account apps: (LYRTApps) apps;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTAccount *) account;
- (void) setAccount: (LYRTAccount *) account;
#endif
- (BOOL) accountIsSet;

#if !__has_feature(objc_arc)
- (LYRTApps) apps;
- (void) setApps: (LYRTApps) apps;
#endif
- (BOOL) appsIsSet;

@end

@interface LYRTPublicKey : NSObject <TBase, NSCoding> {
  LYRTUUID __provider_id;
  LYRTUUID __key_id;
  NSData * __public_key;
  BOOL __disabled;
  BOOL __deleted;
  NSString * __name;

  BOOL __provider_id_isset;
  BOOL __key_id_isset;
  BOOL __public_key_isset;
  BOOL __disabled_isset;
  BOOL __deleted_isset;
  BOOL __name_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=provider_id, setter=setProvider_id:) LYRTUUID provider_id;
@property (nonatomic, retain, getter=key_id, setter=setKey_id:) LYRTUUID key_id;
@property (nonatomic, retain, getter=public_key, setter=setPublic_key:) NSData * public_key;
@property (nonatomic, getter=disabled, setter=setDisabled:) BOOL disabled;
@property (nonatomic, getter=deleted, setter=setDeleted:) BOOL deleted;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
#endif

- (id) init;
- (id) initWithProvider_id: (LYRTUUID) provider_id key_id: (LYRTUUID) key_id public_key: (NSData *) public_key disabled: (BOOL) disabled deleted: (BOOL) deleted name: (NSString *) name;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTUUID) provider_id;
- (void) setProvider_id: (LYRTUUID) provider_id;
#endif
- (BOOL) provider_idIsSet;

#if !__has_feature(objc_arc)
- (LYRTUUID) key_id;
- (void) setKey_id: (LYRTUUID) key_id;
#endif
- (BOOL) key_idIsSet;

#if !__has_feature(objc_arc)
- (NSData *) public_key;
- (void) setPublic_key: (NSData *) public_key;
#endif
- (BOOL) public_keyIsSet;

#if !__has_feature(objc_arc)
- (BOOL) disabled;
- (void) setDisabled: (BOOL) disabled;
#endif
- (BOOL) disabledIsSet;

#if !__has_feature(objc_arc)
- (BOOL) deleted;
- (void) setDeleted: (BOOL) deleted;
#endif
- (BOOL) deletedIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

@end

@interface LYRTUser : NSObject <TBase, NSCoding> {
  LYRTUUID __id;
  NSString * __remote_id;

  BOOL __id_isset;
  BOOL __remote_id_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) LYRTUUID id;
@property (nonatomic, retain, getter=remote_id, setter=setRemote_id:) NSString * remote_id;
#endif

- (id) init;
- (id) initWithId: (LYRTUUID) id remote_id: (NSString *) remote_id;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTUUID) id;
- (void) setId: (LYRTUUID) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) remote_id;
- (void) setRemote_id: (NSString *) remote_id;
#endif
- (BOOL) remote_idIsSet;

@end

@interface LYRTSession : NSObject <TBase, NSCoding> {
  LYRTUUID __app_id;
  LYRTUUID __user_id;
  LYRTUUID __device_id;
  NSString * __session_token;
  int64_t __expiration;

  BOOL __app_id_isset;
  BOOL __user_id_isset;
  BOOL __device_id_isset;
  BOOL __session_token_isset;
  BOOL __expiration_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=app_id, setter=setApp_id:) LYRTUUID app_id;
@property (nonatomic, retain, getter=user_id, setter=setUser_id:) LYRTUUID user_id;
@property (nonatomic, retain, getter=device_id, setter=setDevice_id:) LYRTUUID device_id;
@property (nonatomic, retain, getter=session_token, setter=setSession_token:) NSString * session_token;
@property (nonatomic, getter=expiration, setter=setExpiration:) int64_t expiration;
#endif

- (id) init;
- (id) initWithApp_id: (LYRTUUID) app_id user_id: (LYRTUUID) user_id device_id: (LYRTUUID) device_id session_token: (NSString *) session_token expiration: (int64_t) expiration;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTUUID) app_id;
- (void) setApp_id: (LYRTUUID) app_id;
#endif
- (BOOL) app_idIsSet;

#if !__has_feature(objc_arc)
- (LYRTUUID) user_id;
- (void) setUser_id: (LYRTUUID) user_id;
#endif
- (BOOL) user_idIsSet;

#if !__has_feature(objc_arc)
- (LYRTUUID) device_id;
- (void) setDevice_id: (LYRTUUID) device_id;
#endif
- (BOOL) device_idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) session_token;
- (void) setSession_token: (NSString *) session_token;
#endif
- (BOOL) session_tokenIsSet;

#if !__has_feature(objc_arc)
- (int64_t) expiration;
- (void) setExpiration: (int64_t) expiration;
#endif
- (BOOL) expirationIsSet;

@end

@interface LYRTDevice : NSObject <TBase, NSCoding> {
  LYRTUUID __id;
  NSString * __local_id;
  NSString * __hardware;
  NSString * __os;
  NSString * __framework;
  NSString * __application;

  BOOL __id_isset;
  BOOL __local_id_isset;
  BOOL __hardware_isset;
  BOOL __os_isset;
  BOOL __framework_isset;
  BOOL __application_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) LYRTUUID id;
@property (nonatomic, retain, getter=local_id, setter=setLocal_id:) NSString * local_id;
@property (nonatomic, retain, getter=hardware, setter=setHardware:) NSString * hardware;
@property (nonatomic, retain, getter=os, setter=setOs:) NSString * os;
@property (nonatomic, retain, getter=framework, setter=setFramework:) NSString * framework;
@property (nonatomic, retain, getter=application, setter=setApplication:) NSString * application;
#endif

- (id) init;
- (id) initWithId: (LYRTUUID) id local_id: (NSString *) local_id hardware: (NSString *) hardware os: (NSString *) os framework: (NSString *) framework application: (NSString *) application;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (LYRTUUID) id;
- (void) setId: (LYRTUUID) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) local_id;
- (void) setLocal_id: (NSString *) local_id;
#endif
- (BOOL) local_idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) hardware;
- (void) setHardware: (NSString *) hardware;
#endif
- (BOOL) hardwareIsSet;

#if !__has_feature(objc_arc)
- (NSString *) os;
- (void) setOs: (NSString *) os;
#endif
- (BOOL) osIsSet;

#if !__has_feature(objc_arc)
- (NSString *) framework;
- (void) setFramework: (NSString *) framework;
#endif
- (BOOL) frameworkIsSet;

#if !__has_feature(objc_arc)
- (NSString *) application;
- (void) setApplication: (NSString *) application;
#endif
- (BOOL) applicationIsSet;

@end

@interface LYRTPushToken : NSObject <TBase, NSCoding> {
  int __type;
  NSString * __push_token;
  LYRTUUID __device_id;

  BOOL __type_isset;
  BOOL __push_token_isset;
  BOOL __device_id_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=type, setter=setType:) int type;
@property (nonatomic, retain, getter=push_token, setter=setPush_token:) NSString * push_token;
@property (nonatomic, retain, getter=device_id, setter=setDevice_id:) LYRTUUID device_id;
#endif

- (id) init;
- (id) initWithType: (int) type push_token: (NSString *) push_token device_id: (LYRTUUID) device_id;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) type;
- (void) setType: (int) type;
#endif
- (BOOL) typeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) push_token;
- (void) setPush_token: (NSString *) push_token;
#endif
- (BOOL) push_tokenIsSet;

#if !__has_feature(objc_arc)
- (LYRTUUID) device_id;
- (void) setDevice_id: (LYRTUUID) device_id;
#endif
- (BOOL) device_idIsSet;

@end

@protocol LYRTCtrl <NSObject>
- (LYRTAccount *) createAccount: (LYRTAccount *) account;  // throws LYRTInternalException *, LYRTBadRequestException *, LYRTConflictException *, TException
- (LYRTAccount *) getAccount: (LYRTUUID) id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (void) updateAccount: (LYRTAccount *) account;  // throws LYRTNotFoundException *, LYRTInternalException *, LYRTConflictException *, TException
- (LYRTAccount *) login: (NSString *) email password: (NSString *) password;  // throws LYRTNotFoundException *, LYRTUnauthorizedException *, LYRTInternalException *, TException
- (void) resetPassword: (LYRTUUID) id old_password: (NSString *) old_password new_password: (NSString *) new_password;  // throws LYRTNotFoundException *, LYRTUnauthorizedException *, LYRTInternalException *, TException
- (void) forceResetPassword: (LYRTUUID) id new_password: (NSString *) new_password;  // throws LYRTNotFoundException *, LYRTUnauthorizedException *, LYRTInternalException *, TException
- (LYRTAccount *) getAccountByEmail: (NSString *) email;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (LYRTAccounts) getAllAccounts;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (LYRTAccountApps *) getAccountWithApps: (LYRTUUID) id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (LYRTAccountsWithApps) getAccountsWithApps;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (void) setApnsCertificate: (LYRTUUID) app_id p12_archive: (NSData *) p12_archive password: (NSString *) password is_sandbox: (BOOL) is_sandbox;  // throws LYRTNotFoundException *, LYRTInternalException *, LYRTBadRequestException *, TException
- (LYRTApp *) getApp: (LYRTUUID) app_id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (void) updateApp: (LYRTApp *) app;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (LYRTApp *) createApp: (LYRTUUID) account_id app: (LYRTApp *) app;  // throws LYRTInternalException *, TException
- (LYRTApps) getAppsFromAccount: (LYRTUUID) account_id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (LYRTPublicKey *) addPublicKey: (LYRTPublicKey *) public_key;  // throws LYRTInternalException *, TException
- (LYRTPublicKey *) getPublicKey: (LYRTUUID) provider_id key_id: (LYRTUUID) key_id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (NSMutableArray *) getAllPublicKeys: (LYRTUUID) provider_id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (void) updatePublicKey: (LYRTPublicKey *) public_key;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (BOOL) toggleUserBlacklist: (LYRTUUID) app_id user_id: (LYRTUUID) user_id blacklisted: (BOOL) blacklisted;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (void) revokeSession: (LYRTUUID) app_id user_id: (LYRTUUID) user_id;  // throws LYRTNotFoundException *, LYRTInternalException *, TException
- (NSString *) ping: (NSString *) ping;  // throws TException
@end

@interface LYRTCtrlClient : NSObject <LYRTCtrl> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface LYRTCtrlProcessor : NSObject <TProcessor> {
  id <LYRTCtrl> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithCtrl: (id <LYRTCtrl>) service;
- (id<LYRTCtrl>) service;
@end

@interface LYRTctrlConstants : NSObject {
}
@end
